from forex_python.converter import CurrencyRates
from beancount.core import data
from decimal import Decimal, getcontext, ROUND_DOWN


class ExchangeGain:
    def __init__(self, cfg):
        self.cfg = cfg

    def calc_gains(self, entries):
        gain_entries = []
        c = CurrencyRates()
        for entry in entries:
            if isinstance(entry, data.Transaction):
                if entry.meta.get('invoice_date'):
                    dt = entry.meta.get('invoice_date')
                    invoice_rate = Decimal(c.get_rate('USD', 'INR', dt))

                    for posting in entry.postings:
                        if posting.units.currency != "INR":
                            expected_amount = posting.units.number*invoice_rate
                            actual_amount = posting.units.number*posting.price.number
                            gain = actual_amount-expected_amount
                            META = data.new_metadata(
                                'autogenerated', 12345)
                            FLAG = '*'
                            txn = data.Transaction(
                                META, dt, FLAG, None,
                                f"""Exchange Gain on{dt}
                                invoice rate {invoice_rate.quantize(Decimal('.001'), rounding=ROUND_DOWN)}
                                bank rate {posting.price.number} for {entry.narration}""",
                                data.EMPTY_SET, data.EMPTY_SET, [])
                            data.create_simple_posting(
                                txn, self.cfg['ar'],  gain, "INR")
                            data.create_simple_posting(
                                txn, self.cfg['exchange_gain'], -1 * gain, "INR")
                            gain_entries.append(txn)
        self.gain_entries = gain_entries
        return gain_entries
